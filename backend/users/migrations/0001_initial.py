# Generated by Django 5.2.1 on 2025-05-24 12:10

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=11, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=200)),
                ('account_number', models.CharField(max_length=200)),
                ('account_type', models.CharField(max_length=200)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('is_main', models.BooleanField(default=False)),
                ('alias_name', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DepositDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=100)),
                ('interest_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('duration_months', models.IntegerField()),
                ('started_at', models.DateField()),
                ('ends_at', models.DateField()),
                ('interest_total', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('interest_accumulated', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('interest_last_updated', models.DateTimeField(auto_now_add=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='deposit_detail', to='users.account')),
            ],
        ),
        migrations.CreateModel(
            name='SavingsDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=100)),
                ('interest_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('duration_months', models.IntegerField()),
                ('started_at', models.DateField()),
                ('ends_at', models.DateField()),
                ('total_round', models.IntegerField()),
                ('goal_amount', models.DecimalField(decimal_places=2, max_digits=18)),
                ('accumulated_delay_days', models.IntegerField(default=0)),
                ('delay_status', models.CharField(default='정상', max_length=20)),
                ('interest_total', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('interest_accumulated', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('interest_last_updated', models.DateTimeField(auto_now_add=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='savings_detail', to='users.account')),
            ],
        ),
        migrations.CreateModel(
            name='SavingsPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', models.IntegerField()),
                ('paid_at', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=18)),
                ('savings_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='users.savingsdetail')),
            ],
            options={
                'ordering': ['round_number'],
                'unique_together': {('savings_detail', 'round_number')},
            },
        ),
    ]
